
<project name="JTorrent" default="install" basedir="..">

<!-- ==================== File and Directory Names ======================== -->

	<property name="app.name"       value="JTorrent" />
	<property name="app.version"    value="0.1" />

	<property name="src.home"       value="${basedir}/" />

	<property name="classes.home"   value="${basedir}/classes" />
	<property name="docs.home"      value="${basedir}/docs" />

	<property name="build.home"     value="${basedir}/build" />
	<property name="installer.home" value="${build.home}/installer" />
	<property name="war.home"       value="${build.home}/war" />

<!-- 
     READ THIS COMMENT, it explains how parameters are passed by the installer
     to this build script
     the installdir property passed by the installer to ANT for installation 
     it is where the application is installed 
     the jvmdir property is where the Java JVM we are using is installed 
     the installjar property is the pass to the installer.jar file which
     contains the application -->

<!-- tasks for the installer -->
	<taskdef name="showdialog" classname="org.jtorrent.installer.ShowDialogTask" />

	<target name="installall" description="Install the JTorrent application"
	depends="unpack, mozreg, winreg">
		<showdialog message="JTorrent successfully installed" />
	</target>

<!-- pulls the required files out of the installer.jar and puts them into the
 installdir -->
	<target name="unpack" description="Unpacks classes and docs install install directory for the installer">
		<mkdir dir="${installdir}/classes" />
		<unjar src="${installjar}" dest="${installdir}/classes">
			<patternset>
				<include name="**.class" />
				<include name="**.properties" />
				<include name="**.txt" />
			</patternset>
		</unjar>
		<unjar src="${installjar}" dest="${installdir}">
			<patternset>
				<include name="build.xml" />
				<include name="config.cfg" />
				<include name="ICE_JNIRegistry.dll" />
				<include name="**.torrent" />
				<include name="README.client" />
			</patternset>
		</unjar>
	</target>

<!-- calls the add mime type custom ANT task to add entries to the /etc/mailcap file to allow a web browser to call the bittorrent plugin when a .torrent file is downloaded -->
	<target name="mozreg" description="Adds a x-bittorrent mime type to the /etc/mailcap file">
		<taskdef name="addmimetype" classname="org.jtorrent.installer.AddMimeTypeTask" />
		<addmimetype type="application/x-bittorrent" command="${jvmdir}/bin/java -classpath ${installdir}/classes/ org.jtorrent.plugin.Plugin %s ${installdir}/config.cfg; test=test -n $DISPLAY" />
		<addmimetype type="application/x-bittorrent" command="${jvmdir}/bin/java -classpath ${installdir}/classes/ org.jtorrent.plugin.HeadlessPlugin %s ${installdir}/config.cfg; test=test -z $DISPLAY; needsterminal" />
	</target>

<!-- adds entries to the windows registry so the browser will call the bit torrent plugin when .torrent files are downloaded -->
	<target name="winreg" description="Installs Windows Registry entries">

<!-- careful about changing these two task classes.  If you do, compile them by hand because ANT will suppress the 'file in use' errors which will be caused by the Java compiler trying to overwrite the class files that are currently in use by ANT itself.  The result is that your changes won't happen and you won't know why until you read this comment(or figure it out yourself) -->
		<taskdef name="setwinreg" classname="org.jtorrent.installer.WinSetRegTask" />
		<taskdef name="setwinbinreg" classname="org.jtorrent.installer.WinSetBinRegTask" />

		<setwinreg toplevelkey="HKCR" key=".torrent" valuename="" value="bittorrent" libloc="${installdir}" />
		<setwinreg toplevelkey="HKCR" key=".torrent" valuename="Content Type" value="application/x-bittorrent" />
		<setwinreg toplevelkey="HKCR" key="MIME\Database\Content Type\application/x-bittorrent" valuename="Extension" value=".torrent" />

		<setwinreg toplevelkey="HKCR" key="bittorrent" valuename="" value="TORRENT File" />
		<setwinbinreg toplevelkey="HKCR" key="bittorrent" valuename="EditFlags" value="00000100" />

		<setwinreg toplevelkey="HKCR" key="bittorrent\shell" valuename="" value="open" />

		<setwinreg toplevelkey="HKCR" key="bittorrent\shell\open\command" valuename="" value="&#34;${jvmdir}\bin\javaw&#34; -classpath &#34;${installdir}\classes&#34; org.jtorrent.plugin.Plugin %1 &#34;${installdir}\config.cfg&#34;" />

		<setwinreg toplevelkey="HKLM" key="Software\Microsoft\Windows\CurrentVersion\Uninstall\JTorrent" valuename="DisplayName" value="Java JTorrent 1.0" />
		<setwinreg toplevelkey="HKLM" key="Software\Microsoft\Windows\CurrentVersion\Uninstall\JTorrent" valuename="UninstallString" value="&#34;${jvmdir}\bin\javaw&#34; -classpath &#34;${installdir}\classes&#34; org.jtorrent.installer.Uninstall" />

	</target>

<!-- called by the uninstaller to remove the bit torrent application -->
	<target name="uninstall" description="Uninstall the JTorrent application" depends="unregwin, unregmoz, removefiles">
		<showdialog message="Bit Torrent successfully uninstalled" />
	</target>

<!-- removes the windows registry entries added by the installer -->
	<target name="unregwin" description="Remove windows Registration">
<!-- careful about changing this task classes.  If you do, compile it by hand because ANT will suppress the 'file in use' errors which will be caused by the Java compiler trying to overwrite the class files that are currently in use by ANT itself.  The result is that your changes won't happen and you won't know why until you read this comment(or figure it out yourself) -->
		<taskdef name="removewinreg" classname="org.jtorrent.installer.WinRemoveRegTask" />
		<removewinreg toplevelkey="HKCR" key=".torrent" libloc="${installdir}" />
		<removewinreg toplevelkey="HKCR" key="MIME\Database\Content Type\application/x-bittorrent" />
		<removewinreg toplevelkey="HKCR" key="bittorrent" />
		<removewinreg toplevelkey="HKLM" key="Software\Microsoft\Windows\CurrentVersion\Uninstall\JTorrent" />
	</target>

<!-- removes the bittorrent entries from the /etc/mailcap file -->
	<target name="unregmoz" description="Remove mailcap Registration">
		<taskdef name="removemimetype" classname="org.jtorrent.installer.RemoveMimeTypeTask" />
		<removemimetype type="application/x-bittorrent" />
	</target>

<!-- removes the files created by the unpack and unpacksrc targets -->
	<target name="removefiles" description="Remove JTorrent files">
	<!-- this won't remove all the files because they will be in use, however
           we could write a script into the temp dir which will remove all our
           files and then execute the script, remember to put a short delay
           into the script so the JVM will completely exit before we start
           deleting its files(if we are using our installed JVM -->
		<!--<delete file="${installdir}/ICE_JNIRegistry.dll"/>-->
		<delete file="${installdir}/build.xml"/>
		<delete file="${installdir}/codecon-full.zip.torrent"/>
		<delete file="${installdir}/config.cfg"/>
		<delete file="${installdir}/db-setup.sql"/>
		<delete file="${installdir}/test.torrent"/>
		<delete dir="${installdir}" />
	</target>

</project>
