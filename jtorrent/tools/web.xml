<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app 
    PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" 
    "http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>


    <!-- General description of your web application -->

    <display-name>Bit Torrent Tracker</display-name>
    <description>
      This is version 0.1 of the Bit Torrent Tracker which serves lists of 
peers and monitors the status of a p2p Bit Torrent network.
    </description>

    <context-param>
      <param-name>webmaster</param-name>
      <param-value>hunterpayne2001@yahoo.com</param-value>
      <description>
        The EMAIL address of the administrator to whom questions
        and comments about this application should be addressed.
      </description>
    </context-param>


    <!-- Servlet definitions for the servlets that make up
         your web application, including initialization
         parameters.  With Tomcat, you can also send requests
         to servlets not listed here with a request like this:

           http://localhost:8080/{context-path}/servlet/{classname}

         but this usage is not guaranteed to be portable.  It also
         makes relative references to images and other resources
         required by your servlet more complicated, so defining
         all of your servlets (and defining a mapping to them with
         a servlet-mapping element) is recommended.

         Servlet initialization parameters can be retrieved in a
         servlet or JSP page by calling:

             String value =
               getServletConfig().getInitParameter("name");

         where "name" matches the <param-name> element of
         one of these initialization parameters.

         You can define any number of servlets, including zero.
    -->

    <servlet>
      <servlet-name>tracker</servlet-name>
      <description>the tracker servlet
      </description>
      <servlet-class>org.jtorrent.tracker.TrackerServlet</servlet-class>
      <init-param>
        <param-name>response_size</param-name>
        <param-value>25</param-value>
      </init-param>
      <init-param>
        <param-name>reannounce_interval</param-name>
        <param-value>1800</param-value>
      </init-param>
      <init-param>
        <param-name>timeout_downloaders_interval</param-name>
        <param-value>2700</param-value>
      </init-param>
      <init-param>
        <param-name>logfile</param-name>
        <param-value>/tmp/log.html</param-value>
      </init-param>
      <init-param>
        <param-name>launch</param-name>
        <param-value>false</param-value>
      </init-param>
      <init-param>
        <param-name>allowed_dir</param-name>
        <param-value>/home/payne/org/bittorrent/</param-value>
      </init-param>
      <init-param>
        <param-name>origin_dir</param-name>
        <param-value>/home/payne/org/bittorrent/test/</param-value>
      </init-param>
<!--      <init-param>
        <param-name>peer_command</param-name>
        <param-value>/usr/local/j2sdk1.4.1/bin/java -classpath /home/payne/classes/ org.jtorrent.ptop.Origin /home/payne/org/bittorrent/config.cfg</param-value>
      </init-param>-->
<!--      <init-param>
        <param-name>nat_check</param-name>
        <param-value></param-value>
      </init-param> -->
<!-- NOT USED
      <init-param>
        <param-name>save_dfile_interval</param-name>
        <param-value>300</param-value>
      </init-param>-->
      <init-param>
        <param-name>database_resource_name</param-name>
        <param-value>jdbc/TrackerDB</param-value>
      </init-param>
      <init-param>
        <param-name>timeout_check_interval</param-name>
        <param-value>300</param-value>
      </init-param>
      <init-param>
        <param-name>min_time_between_log_flushes</param-name>
        <param-value>120</param-value>
      </init-param>
      <init-param>
        <param-name>parse_allowed_interval</param-name>
        <param-value>900</param-value>
      </init-param>
      <!-- Load this servlet at server startup time -->
      <load-on-startup>1</load-on-startup>
    </servlet>

    <resource-ref>
      <res-ref-name>jdbc/TrackerDB</res-ref-name>
      <res-type>javax.sql.DataSource</res-type>
      <res-auth>Container</res-auth>
    </resource-ref>

    <servlet-mapping>
      <servlet-name>tracker</servlet-name>
      <url-pattern>/tracker</url-pattern>
    </servlet-mapping>
</web-app>
